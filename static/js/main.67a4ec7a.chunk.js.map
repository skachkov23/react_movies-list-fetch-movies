{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAdd","useState","query","setQuery","isFound","setFound","setMovie","movieFinder","a","fetch","then","response","ok","Error","status","statusText","json","newMovie","Response","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","disabled","App","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"yTAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCHRC,G,MAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAuB,MAAjD,mBAAOb,EAAP,KAAckB,EAAd,KASMC,EAAW,uCAAG,4BAAAC,EAAA,sECvBbC,MAAM,8CAAD,ODwBsBP,ICvB/BQ,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UDiBA,UAGQ,WAFpBC,EADY,QAGLC,SAHK,uBAIhBb,GAAS,GACTC,EAAS,MALO,0BAUlBH,EAAS,IACTG,EAASW,GAXS,2CAAH,qDAcjB,OACE,qCACE,uBAAM5B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,yBAIA,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjC,UAAWkC,IACT,QACA,CAAE,YAAanB,IAEjBoB,MAAOtB,EACPuB,SAxCU,SAACC,GACrB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERrB,EAASqB,GACTnB,GAAS,SAwCDD,GACA,mBAAGf,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,kBACVuC,QAASrB,EAHX,4BASF,qBAAKlB,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,oBACVwC,UAAWzC,EACXwC,QAAS,WACP5B,EAAMZ,GACNkB,EAAS,OANb,qCAeN,sBAAKjB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,YE1FvB0C,G,MAAU,WACrB,MAA4B7B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAemC,EAAf,KAQA,OACE,sBAAK1C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,MAZA,SAACiB,GACXrB,EAAOoC,MAAK,SAAA5C,GAAK,OAAIA,EAAMU,SAAWmB,EAASnB,WAClDiC,EAAU,CAACd,GAAF,mBAAerB,eCR9BqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.67a4ec7a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { FC, useState } from 'react';\n\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [isFound, setFound] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setFound(false);\n  };\n\n  const movieFinder = async () => {\n    const newMovie = await getMovie(query);\n\n    if (newMovie.Response === 'False') {\n      setFound(true);\n      setMovie(null);\n\n      return;\n    }\n\n    setQuery('');\n    setMovie(newMovie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': isFound },\n              )}\n              value={query}\n              onChange={changeHandler}\n            />\n          </div>\n\n          {!isFound || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={movieFinder}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                onAdd(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","export const getMovie = (title: string) => {\n  return fetch(`https://www.omdbapi.com/?apikey=29802301&t=${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { FC, useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([newMovie, ...movies]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}